{
    "openapi": "3.0.2",
    "info": {
        "title": "Netzwerktechnik",
        "version": "1.0",
        "contact": {
            "name": "David Nguyen"
        }
    },
    "servers": [
        {
            "url": "https://api.server.test/v1"
        }
    ],
    "paths": {
        "/todo-list/{list_id}": {
            "get": {
                "tags": [
                    "todo-list"
                ],
                "summary": "Get all entries of the Todo-List ",
                "description": "Returns all entries of a todo list.",
                "operationId": "getTodo-listByID",
                "parameters": [
                    {
                        "name": "todo-listID",
                        "in": "path",
                        "description": "ID of todo-list to return",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Todo-List"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Todo-List:",
                        "schema": {
                            "$ref": "#/definitions/Todo-List"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "todo-list"
                ],
                "summary": "Deletes the entire Todo-List",
                "description": "",
                "operationId": "deleteTodo-List",
                "parameters": [
                    {
                        "name": "todo-listID",
                        "in": "path",
                        "description": "ID of todo-list to return",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Todo-List"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "Todo-List not found"
                    }
                }
            },
            "/todo-list/": {
                "post": {
                    "tags": [
                        "todo-list"
                    ],
                    "summary": "Add a new Todo-list",
                    "description": "",
                    "operationId": "addTodo-List",
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "description": "List of Todos object",
                            "required": true,
                            "schema": {
                                "$ref": "#/definitions/Todo-List"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "successful operation"
                        }
                    }
                }
            },
            "/todo-list/{list_id}/entry/": {
                "post": {
                    "tags": [
                        "todo-list"
                    ],
                    "summary": "Post an entry to the todo-list",
                    "description": "",
                    "operationId": "postTodo-List",
                    "parameters": [
                        {
                            "name": "todo-listID",
                            "in": "path",
                            "description": "ID of Todo-List to post",
                            "required": true,
                            "type": "integer",
                            "format": "int64",
                            "schema": {
                                "$ref": "#/definitions/Todo-List"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "successful operation"
                        }
                    }
                }
            },
            "/todo-list/{list_id}/entry/{entry_id}":{
                "put": {
                    "tags": [
                        "entry"
                    ],
                    "summary": "Updated entry",
                    "description": ".",
                    "operationId": "updateEntry",
                    "parameters": [
                        {
                            "name": "username",
                            "in": "path",
                            "description": "name that need to be updated",
                            "required": true
                        },
                        {
                            "in": "path",
                            "name": "body",
                            "description": "Updated user object",
                            "required": true,
                            "schema": {
                                "$ref": "#/definitions/Entry"
                            }
                        }
                    ],
                    "responses": {
                        "400": {
                            "description": "Invalid user supplied"
                        },
                        "404": {
                            "description": "User not found"
                        }
                    }
                }
            }

        }
    },
    "definitions": {
        "Todo-List": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "entryno": {
                    "type": "integer",
                    "format": "int64"
                },
                "Date": {
                    "type": "string",
                    "format": "date"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "approved",
                        "unapproved"
                    ]
                },
                "complete": {
                    "type": "boolean"
                }
            }
        },
        "Entry": {
            "type": "entry",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Entry"
            }
        }
    }
}